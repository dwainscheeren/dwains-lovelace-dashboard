# dwains_theme

header_states_cover:
  show_state: false
  show_label: true
  tap_action: 
    action: navigate
    navigation_path: devices_covers
  name: {{ _d_t_trans.cover.title_plural }}
  icon: >
    [[[
      {% if _d_t_config.global['show_covers'] in ['partly_closed','closed'] %}
        return "{{ _d_t_icons.cover|default('mdi:window-shutter') }}"
      {% else %}
        return "{{ _d_t_icons.cover|default('mdi:window-shutter-open') }}"
      {% endif %}
    ]]]
  variables:
    status: >
      [[[
        var openCovers = 0;
        var partlyClosedCovers = 0;
        var closedCovers = 0;
        
        {% for room in _d_t_config.rooms %}                        
          //Do some things for the covers
          {% if room["cover"] %}
            {% if room["cover"].split('.')[0] == 'cover' %}
            //This room has only 1 cover
              if(states['{{ room["cover"] }}']) {               
                if(states['{{ room["cover"] }}'].state == 'open'){
                  if (states['{{ room["cover"] }}'].attributes['current_position'] != 100){
                    partlyClosedCovers++;
                  }
                  openCovers++;
                } else {
                  closedCovers++;
                }
              }              
            {% elif room["cover"].split('.')[0] == 'group' %}
            //This room has group of covers
              if(states['{{ room["cover"] }}']){
                states['{{ room["cover"] }}'].attributes['entity_id'].forEach(function(entity){
                  if(states[entity]){
                    if (states[entity].state == 'open'){                  
                      if(states[entity].attributes['current_position'] != 100){
                        partlyClosedCovers++;
                      }
                      openCovers++;                      
                    } else {
                      closedCovers++;
                    }                  
                  }
                });  
              }
            {% endif %}
          {% endif %}
        {% endfor %}
        
        return {"open": openCovers, "partly_closed": partlyClosedCovers, "closed": closedCovers};
      ]]]
  label: >
    [[[
      {% if _d_t_config.global['show_covers'] == 'closed' %}
        return variables.status['closed'] + ' ' + hass.localize('component.cover.state._.closed');
      {% elif _d_t_config.global['show_covers'] == 'partly_closed'  %}
        return variables.status['partly_closed'] + ' ' + hass.localize('component.cover.state._.closed');
      {% else %}
        return variables.status['open'] + ' ' + hass.localize('component.cover.state._.open');
      {% endif %}        
    ]]]
  styles:
    grid:
      - grid-template-areas: '"i""n""l"'
    icon:
      - color: white
      - width: 55%
    img_cell:
      - width: 40px
      - height: 40px
      - background: var(--dwains-theme-header-button-background)
      - color: white
      - border-radius: 100%
    card:
      - box-shadow: none
      - padding: 0%
      - width: 61px
      - display: >
          [[[
            if(variables.status && variables.status['{{ _d_t_config.global["show_covers"]|default("open")}}'] > 0){
              //Open covers
              return 'block';
            } else {
              //No open covers
              return 'none';
            }
          ]]]
    label:
      - color: var(--dwains-theme-header-text)
      - justify-self: center
      - font-size: 11px
      - line-height: 12px
    name:
      - color: var(--dwains-theme-header-text)
      - justify-self: center
      - font-size: 13px
